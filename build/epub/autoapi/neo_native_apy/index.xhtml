<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta property="og:title" content="neo_native_apy" />
  <meta property="og:type" content="website" />
  <meta property="og:url" content="autoapi/neo_native_apy/index.xhtml" />
  <meta property="og:description" content="Module Contents: Classes: Attributes:" />
  
    <title>neo_native_apy</title>
    <link rel="stylesheet" type="text/css" href="../../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../../_static/epub.css" />
    <link rel="stylesheet" type="text/css" href="../../_static/togglebutton.css" />
    <link rel="stylesheet" type="text/css" href="../../_static/mystnb.css" />
    <link rel="stylesheet" type="text/css" href="../../_static/copybutton.css" />
    <link rel="stylesheet" type="text/css" href="../../_static/sphinx-thebe.css" />
    <link rel="stylesheet" type="text/css" href="../../_static/graphviz.css" />
    <link rel="stylesheet" type="text/css" href="../../_static/design-style.59c74d8c95b765a7fd995ac71d459ebe.min.css" />   
<link
  rel="alternate"
  type="application/atom+xml"
  href="../../sections/blog/posts/atom.xml"
  title="Blog"
/>
 
<style type="text/css">
  ul.ablog-archive {
    list-style: none;
    overflow: auto;
    margin-left: 0px;
  }
  ul.ablog-archive li {
    float: left;
    margin-right: 5px;
    font-size: 80%;
  }
  ul.postlist a {
    font-style: italic;
  }
  ul.postlist-style-disc {
    list-style-type: disc;
  }
  ul.postlist-style-none {
    list-style-type: none;
  }
  ul.postlist-style-circle {
    list-style-type: circle;
  }
</style>

  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
             <div class="section" id="module-neo_native_apy">
<span id="neo-native-apy"></span><h1><a class="reference internal" href="#module-neo_native_apy" title="neo_native_apy"><code class="xref py py-mod docutils literal notranslate"><span class="pre">neo_native_apy</span></code></a></h1>
<div class="section" id="module-contents">
<h2>Module Contents</h2>
<div class="section" id="classes">
<h3>Classes</h3>
<table class="longtable docutils align-default">
<colgroup>
<col style="width: 10%">
<col style="width: 90%">
</colgroup>
<tbody>
<tr class="row-odd">
<td><p><a class="reference internal" href="#neo_native_apy.NeoSandboxApp" title="neo_native_apy.NeoSandboxApp"><code class="xref py py-obj docutils literal notranslate"><span class="pre">NeoSandboxApp</span></code></a></p></td>
<td><p></p></td>
</tr>
<tr class="row-even">
<td><p><a class="reference internal" href="#neo_native_apy.NeoApp" title="neo_native_apy.NeoApp"><code class="xref py py-obj docutils literal notranslate"><span class="pre">NeoApp</span></code></a></p></td>
<td><p></p></td>
</tr>
</tbody>
</table>
</div>
<div class="section" id="attributes">
<h3>Attributes</h3>
<table class="longtable docutils align-default">
<colgroup>
<col style="width: 10%">
<col style="width: 90%">
</colgroup>
<tbody>
<tr class="row-odd">
<td><p><a class="reference internal" href="#neo_native_apy.uri" title="neo_native_apy.uri"><code class="xref py py-obj docutils literal notranslate"><span class="pre">uri</span></code></a></p></td>
<td><p></p></td>
</tr>
</tbody>
</table>
<dl class="py class">
<dt class="sig sig-object py" id="neo_native_apy.NeoSandboxApp">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">neo_native_apy.</span></span><span class="sig-name descname"><span class="pre">NeoSandboxApp</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">bolt</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">user</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">password</span></span></em><span class="sig-paren">)</span>
</dt>
<dd>
<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoSandboxApp.run_test_query">
<span class="sig-name descname"><span class="pre">run_test_query</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">self</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoSandboxApp.set_property_by_id">
<span class="sig-name descname"><span class="pre">set_property_by_id</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">self</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">id_label_obj</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">property</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">value</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoSandboxApp._set_property_by_id">
<em class="property"><span class="pre">static</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">_set_property_by_id</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">tx</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">id_label_obj</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">property</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">value</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoSandboxApp.create_relationship_by_id">
<span class="sig-name descname"><span class="pre">create_relationship_by_id</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">self</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">id_label_obj_1</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">id_label_obj_2</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">relationship_struct</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">relationship_type</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoSandboxApp._create_relationship_by_id">
<em class="property"><span class="pre">static</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">_create_relationship_by_id</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">tx</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">id_label_obj_1</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">id_label_obj_2</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">relationship_struct</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">relationship_type</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoSandboxApp.return_root_url">
<span class="sig-name descname"><span class="pre">return_root_url</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">self</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">search_string</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoSandboxApp._match_and_return_search_url">
<em class="property"><span class="pre">static</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">_match_and_return_search_url</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">tx</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">search_url</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoSandboxApp.create_relationship">
<span class="sig-name descname"><span class="pre">create_relationship</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">self</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">node_1</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">node_2</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">relationship_struct</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoSandboxApp._create_relationship">
<em class="property"><span class="pre">static</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">_create_relationship</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">tx</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">node_1</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">node_2</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">relationship_struct</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoSandboxApp.add_node">
<span class="sig-name descname"><span class="pre">add_node</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">self</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">node_struct</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">node_label</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoSandboxApp._add_node">
<em class="property"><span class="pre">static</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">_add_node</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">tx</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">node_struct</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">node_label</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoSandboxApp.return_to_process_stack_node">
<span class="sig-name descname"><span class="pre">return_to_process_stack_node</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">self</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">node_property_struct</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">limit</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">1</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoSandboxApp._match_and_return_node">
<em class="property"><span class="pre">static</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">_match_and_return_node</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">tx</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">node_property_struct</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">common_label</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">limit</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoSandboxApp.return_node_related_to_node">
<span class="sig-name descname"><span class="pre">return_node_related_to_node</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">self</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">node_1</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">relation_to</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">node_2</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">limit</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoSandboxApp._match_and_return_related_node">
<em class="property"><span class="pre">static</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">_match_and_return_related_node</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">tx</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">node_1</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">relation_to</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">node_2</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">limit</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoSandboxApp.create_friendship">
<span class="sig-name descname"><span class="pre">create_friendship</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">self</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">person1_name</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">person2_name</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoSandboxApp._create_and_return_friendship">
<em class="property"><span class="pre">static</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">_create_and_return_friendship</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">tx</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">person1_name</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">person2_name</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoSandboxApp.find_person">
<span class="sig-name descname"><span class="pre">find_person</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">self</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">person_name</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoSandboxApp._find_and_return_person">
<em class="property"><span class="pre">static</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">_find_and_return_person</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">tx</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">person_name</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoSandboxApp.close">
<span class="sig-name descname"><span class="pre">close</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">self</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

</dd>
</dl>

<dl class="py class">
<dt class="sig sig-object py" id="neo_native_apy.NeoApp">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">neo_native_apy.</span></span><span class="sig-name descname"><span class="pre">NeoApp</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">uri</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">user</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">password</span></span></em><span class="sig-paren">)</span>
</dt>
<dd>
<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoApp.close">
<span class="sig-name descname"><span class="pre">close</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">self</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoApp.create_friendship">
<span class="sig-name descname"><span class="pre">create_friendship</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">self</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">person1_name</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">person2_name</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoApp._create_and_return_friendship">
<em class="property"><span class="pre">static</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">_create_and_return_friendship</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">tx</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">person1_name</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">person2_name</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoApp.find_person">
<span class="sig-name descname"><span class="pre">find_person</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">self</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">person_name</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoApp._find_and_return_person">
<em class="property"><span class="pre">static</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">_find_and_return_person</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">tx</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">person_name</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

<dl class="py method">
<dt class="sig sig-object py" id="neo_native_apy.NeoApp.query">
<span class="sig-name descname"><span class="pre">query</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">self</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">query</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">parameters</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">db</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span>
</dt>
<dd></dd>
</dl>

</dd>
</dl>

<dl class="py data">
<dt class="sig sig-object py" id="neo_native_apy.uri">
<span class="sig-prename descclassname"><span class="pre">neo_native_apy.</span></span><span class="sig-name descname"><span class="pre">uri</span></span><em class="property"><span class="w"> </span><span class="pre">=</span> <span class="pre">neo4j+s://b121e108.databases.neo4j.io</span></em>
</dt>
<dd></dd>
</dl>

</div>
</div>
</div>

    
<script type="text/x-thebe-config">
    {
        requestKernel: true,
        binderOptions: {
            repo: "binder-examples/jupyter-stacks-datascience",
            ref: "master",
        },
        codeMirrorConfig: {
            theme: "abcdef",
            mode: "python"
        },
        kernelOptions: {
            kernelName: "python3",
            path: "./autoapi/neo_native_apy"
        },
        predefinedOutput: true
    }
    </script>
    
<script>kernelName = 'python3'</script>

<div class="section">
   
</div>

            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>